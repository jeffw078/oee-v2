# Generated by Django 4.2.7 on 2025-07-18 18:54

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nome_completo", models.CharField(max_length=255)),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("admin", "Administrador"),
                            ("analista", "Analista"),
                            ("qualidade", "Qualidade"),
                            ("manutencao", "Manutenção"),
                            ("soldador", "Soldador"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("ultimo_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Componente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=150)),
                ("descricao", models.TextField(blank=True)),
                (
                    "tempo_padrao",
                    models.DecimalField(
                        decimal_places=2, help_text="Tempo em minutos", max_digits=10
                    ),
                ),
                ("considera_diametro", models.BooleanField(default=False)),
                (
                    "formula_calculo",
                    models.TextField(
                        blank=True, help_text="Fórmula para cálculo baseado em diâmetro"
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConfiguracaoSistema",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("chave", models.CharField(max_length=100, unique=True)),
                ("valor", models.TextField()),
                ("descricao", models.TextField()),
                (
                    "tipo_dado",
                    models.CharField(
                        choices=[
                            ("string", "String"),
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("boolean", "Boolean"),
                        ],
                        default="string",
                        max_length=20,
                    ),
                ),
                ("data_atualizacao", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Modulo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100)),
                ("descricao", models.TextField(blank=True)),
                ("ativo", models.BooleanField(default=True)),
                ("ordem_exibicao", models.IntegerField(default=1)),
                (
                    "data_criacao",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
            options={
                "ordering": ["ordem_exibicao"],
            },
        ),
        migrations.CreateModel(
            name="Soldador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("senha_simplificada", models.CharField(max_length=10)),
                ("ativo", models.BooleanField(default=True)),
                (
                    "data_cadastro",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SessaoOffline",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dispositivo_id", models.CharField(max_length=100, unique=True)),
                ("dados_cache", models.JSONField(default=dict)),
                (
                    "ultimo_sync",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("status_conexao", models.BooleanField(default=True)),
                (
                    "soldador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.soldador"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="LogAuditoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("acao", models.CharField(max_length=100)),
                ("tabela_afetada", models.CharField(max_length=100)),
                ("registro_id", models.CharField(max_length=100)),
                ("dados_antes", models.JSONField(blank=True, null=True)),
                ("dados_depois", models.JSONField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "usuario",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
    ]
