# Generated by Django 4.2.7 on 2025-07-22 19:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nome_completo", models.CharField(max_length=100)),
                (
                    "tipo_usuario",
                    models.CharField(
                        choices=[
                            ("admin", "Administrador"),
                            ("analista", "Analista"),
                            ("qualidade", "Qualidade"),
                            ("manutencao", "Manutenção"),
                            ("soldador", "Soldador"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("ultimo_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="soldagem_usuario_set",
                        related_query_name="soldagem_usuario",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="soldagem_usuario_set",
                        related_query_name="soldagem_usuario",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Apontamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero_poste_tubo", models.CharField(max_length=50)),
                (
                    "diametro",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("inicio_processo", models.DateTimeField()),
                ("fim_processo", models.DateTimeField(blank=True, null=True)),
                (
                    "tempo_real",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("tempo_padrao", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "eficiencia_calculada",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("observacoes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-inicio_processo"],
            },
        ),
        migrations.CreateModel(
            name="Componente",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
                ("descricao", models.TextField(blank=True)),
                (
                    "tempo_padrao",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Tempo padrão em minutos",
                        max_digits=8,
                    ),
                ),
                ("considera_diametro", models.BooleanField(default=False)),
                (
                    "formula_calculo",
                    models.TextField(
                        blank=True,
                        help_text="Fórmula para cálculo quando considera diâmetro",
                    ),
                ),
                ("ativo", models.BooleanField(default=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["nome"],
            },
        ),
        migrations.CreateModel(
            name="Modulo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=50, unique=True)),
                ("descricao", models.TextField(blank=True)),
                ("ativo", models.BooleanField(default=True)),
                ("ordem_exibicao", models.IntegerField(default=0)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Módulo",
                "verbose_name_plural": "Módulos",
                "ordering": ["ordem_exibicao", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Pedido",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("numero", models.CharField(max_length=50, unique=True)),
                ("descricao", models.TextField(blank=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                ("data_prevista", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ativo", "Ativo"),
                            ("finalizado", "Finalizado"),
                            ("cancelado", "Cancelado"),
                        ],
                        default="ativo",
                        max_length=20,
                    ),
                ),
                ("observacoes", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-data_criacao"],
            },
        ),
        migrations.CreateModel(
            name="Soldador",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("senha_simplificada", models.CharField(max_length=10)),
                ("ativo", models.BooleanField(default=True)),
                ("data_cadastro", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Soldador",
                "verbose_name_plural": "Soldadores",
            },
        ),
        migrations.CreateModel(
            name="TipoParada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nome", models.CharField(max_length=100, unique=True)),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("geral", "Geral"),
                            ("manutencao", "Manutenção"),
                            ("qualidade", "Qualidade"),
                        ],
                        max_length=20,
                    ),
                ),
                ("penaliza_oee", models.BooleanField(default=True)),
                ("requer_senha_especial", models.BooleanField(default=False)),
                ("ativo", models.BooleanField(default=True)),
                ("cor_exibicao", models.CharField(default="#6c757d", max_length=7)),
            ],
            options={
                "ordering": ["categoria", "nome"],
            },
        ),
        migrations.CreateModel(
            name="Parada",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("inicio", models.DateTimeField()),
                ("fim", models.DateTimeField(blank=True, null=True)),
                (
                    "duracao_minutos",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("motivo_detalhado", models.TextField(blank=True)),
                ("data_criacao", models.DateTimeField(auto_now_add=True)),
                (
                    "apontamento",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="soldagem.apontamento",
                    ),
                ),
                (
                    "soldador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="soldagem.soldador",
                    ),
                ),
                (
                    "tipo_parada",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="soldagem.tipoparada",
                    ),
                ),
                (
                    "usuario_autorizacao",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-inicio"],
            },
        ),
        migrations.CreateModel(
            name="LogAuditoria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("acao", models.CharField(max_length=100)),
                ("tabela_afetada", models.CharField(max_length=50)),
                ("registro_id", models.IntegerField()),
                ("dados_antes", models.JSONField(blank=True, null=True)),
                ("dados_depois", models.JSONField(blank=True, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddField(
            model_name="apontamento",
            name="componente",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="soldagem.componente"
            ),
        ),
        migrations.AddField(
            model_name="apontamento",
            name="modulo",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="soldagem.modulo"
            ),
        ),
        migrations.AddField(
            model_name="apontamento",
            name="pedido",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="soldagem.pedido"
            ),
        ),
        migrations.AddField(
            model_name="apontamento",
            name="soldador",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="soldagem.soldador"
            ),
        ),
        migrations.CreateModel(
            name="Turno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data_turno", models.DateField()),
                ("inicio_turno", models.DateTimeField()),
                ("fim_turno", models.DateTimeField(blank=True, null=True)),
                (
                    "horas_disponiveis",
                    models.DecimalField(decimal_places=2, default=8.0, max_digits=4),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ativo", "Ativo"), ("finalizado", "Finalizado")],
                        default="ativo",
                        max_length=20,
                    ),
                ),
                (
                    "soldador",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="soldagem.soldador",
                    ),
                ),
            ],
            options={
                "ordering": ["-data_turno", "-inicio_turno"],
                "unique_together": {("soldador", "data_turno", "status")},
            },
        ),
    ]
